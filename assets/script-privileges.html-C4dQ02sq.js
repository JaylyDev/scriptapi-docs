import{_ as s,c as a,a as e,o as t}from"./app-ChVSvtdD.js";const p={};function i(l,n){return t(),a("div",null,n[0]||(n[0]=[e(`<h1 id="script-privileges" tabindex="-1"><a class="header-anchor" href="#script-privileges"><span>Script Privileges</span></a></h1><p>This is a guide on understanding what Scripting API privileges are. This includes going through what read-only mode, and the new early-execution mode implemented in Scripting v2.0.0 are about.</p><p>You might have encounted this error when running your scripts, about not having required privileges when calling a native function or a property such as the following mesasge:</p><blockquote><p>Plugin [&lt;plugin name&gt; - &lt;target module version&gt;] - [&lt;file&gt;] ran with error: [ReferenceError: Native function [&lt;Class&gt;::&lt;method&gt;] does not have required privileges. at ...]</p></blockquote><p>There are two reasons this message occurs, one is that the method or property is called during read-only mode, or early-execution mode.</p><h2 id="read-only-mode" tabindex="-1"><a class="header-anchor" href="#read-only-mode"><span>Read-only mode</span></a></h2><p>This means script that are in this state are not allowed to alter world state within these callbacks. The script is in read-only state when Minecraft simulation begins and before events are triggered, or before the start of the &quot;script&quot; tick.</p><p>When the error above occurs, that means you attempted to run a function that tries to modify the state of the world on before events.</p><h3 id="resolving-read-only-issue" tabindex="-1"><a class="header-anchor" href="#resolving-read-only-issue"><span>Resolving read-only issue</span></a></h3><p>The easiest way to resolve this issue is to move code, which contains all native functions that can&#39;t be called in read-only mode, and all native properties that can&#39;t be edited in read-only mode into a <code>system.run</code> callback. Here is an example scnerario where we&#39;re trying to modify the state of the world in a before event callback.</p><p>The native function <code>MessageFormData.show()</code> cannot be called in read-only mode, so the following code will throw a ReferenceError explaining that function does not have required privileges.</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code><span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> system<span class="token punctuation">,</span> world <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@minecraft/server&quot;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> MessageFormData <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@minecraft/server-ui&quot;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// Subscribe to playerInteractWithBlock event to detect</span></span>
<span class="line"><span class="token comment">// if a player interacts with a block</span></span>
<span class="line">world<span class="token punctuation">.</span>beforeEvents<span class="token punctuation">.</span>playerInteractWithBlock<span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">event</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token comment">// Check if player interacts with a crafter whilst holding diamonds</span></span>
<span class="line">  <span class="token keyword">if</span> <span class="token punctuation">(</span></span>
<span class="line">    event<span class="token punctuation">.</span>block<span class="token punctuation">.</span>typeId <span class="token operator">===</span> <span class="token string">&quot;minecraft:crafter&quot;</span> <span class="token operator">&amp;&amp;</span></span>
<span class="line">    event<span class="token punctuation">.</span>itemStack <span class="token operator">&amp;&amp;</span></span>
<span class="line">    event<span class="token punctuation">.</span>itemStack<span class="token punctuation">.</span>typeId <span class="token operator">===</span> <span class="token string">&quot;minecraft:diamond&quot;</span></span>
<span class="line">  <span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token comment">// Cancel interaction</span></span>
<span class="line">    event<span class="token punctuation">.</span>cancel <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">const</span> form <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MessageFormData</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">      <span class="token punctuation">.</span><span class="token function">title</span><span class="token punctuation">(</span><span class="token string">&quot;Crafter&quot;</span><span class="token punctuation">)</span></span>
<span class="line">      <span class="token punctuation">.</span><span class="token function">body</span><span class="token punctuation">(</span><span class="token string">&quot;This is a crafter!&quot;</span><span class="token punctuation">)</span></span>
<span class="line">      <span class="token punctuation">.</span><span class="token function">button1</span><span class="token punctuation">(</span><span class="token string">&quot;Close&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// Error throws as .show() requires privileges.</span></span>
<span class="line">    form<span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span>event<span class="token punctuation">.</span>player<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// player.sendMessage is not limited by read-only mode,</span></span>
<span class="line">    <span class="token comment">// so this function can be called here.</span></span>
<span class="line">    player<span class="token punctuation">.</span><span class="token function">sendMessage</span><span class="token punctuation">(</span><span class="token string">&quot;Player is using the crafter.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>To adapt the code so it runs properly in read-only mode, the code above is changed into this:</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code><span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> system<span class="token punctuation">,</span> world <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@minecraft/server&quot;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> MessageFormData <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@minecraft/server-ui&quot;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// Subscribe to playerInteractWithBlock event to detect</span></span>
<span class="line"><span class="token comment">// if a player interacts with a block</span></span>
<span class="line">world<span class="token punctuation">.</span>beforeEvents<span class="token punctuation">.</span>playerInteractWithBlock<span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">event</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token comment">// Check if player interacts with a crafter whilst holding diamonds</span></span>
<span class="line">  <span class="token keyword">if</span> <span class="token punctuation">(</span></span>
<span class="line">    event<span class="token punctuation">.</span>block<span class="token punctuation">.</span>typeId <span class="token operator">===</span> <span class="token string">&quot;minecraft:crafter&quot;</span> <span class="token operator">&amp;&amp;</span></span>
<span class="line">    event<span class="token punctuation">.</span>itemStack <span class="token operator">&amp;&amp;</span></span>
<span class="line">    event<span class="token punctuation">.</span>itemStack<span class="token punctuation">.</span>typeId <span class="token operator">===</span> <span class="token string">&quot;minecraft:diamond&quot;</span></span>
<span class="line">  <span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token comment">// Cancel interaction</span></span>
<span class="line">    event<span class="token punctuation">.</span>cancel <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// Creating a new MessageFormData object, calling title,</span></span>
<span class="line">    <span class="token comment">// body, and button1 can be called within read-only mode.</span></span>
<span class="line">    <span class="token comment">// This means they can be called within this</span></span>
<span class="line">    <span class="token comment">// callback before script tick.</span></span>
<span class="line">    <span class="token keyword">const</span> form <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MessageFormData</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">      <span class="token punctuation">.</span><span class="token function">title</span><span class="token punctuation">(</span><span class="token string">&quot;Crafter&quot;</span><span class="token punctuation">)</span></span>
<span class="line">      <span class="token punctuation">.</span><span class="token function">body</span><span class="token punctuation">(</span><span class="token string">&quot;This is a crafter!&quot;</span><span class="token punctuation">)</span></span>
<span class="line">      <span class="token punctuation">.</span><span class="token function">button1</span><span class="token punctuation">(</span><span class="token string">&quot;Close&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// If event.player is used during script tick, declare</span></span>
<span class="line">    <span class="token comment">// it in a variable, otherwise you can&#39;t retrieve the</span></span>
<span class="line">    <span class="token comment">// player object, as event object turns into null</span></span>
<span class="line">    <span class="token comment">// after read-only state ends.</span></span>
<span class="line">    <span class="token keyword">const</span> player <span class="token operator">=</span> event<span class="token punctuation">.</span>player<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// Use system.run to queue for later in the current</span></span>
<span class="line">    <span class="token comment">// tick to bypass read-only state</span></span>
<span class="line">    system<span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token comment">// Show the player a message form in script tick.</span></span>
<span class="line">      <span class="token comment">// As MessageFormData.show() is marked so it can&#39;t</span></span>
<span class="line">      <span class="token comment">// be called in read-only mode</span></span>
<span class="line">      form<span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span>player<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// player.sendMessage is not limited by read-only mode,</span></span>
<span class="line">    <span class="token comment">// so this function can be called here.</span></span>
<span class="line">    player<span class="token punctuation">.</span><span class="token function">sendMessage</span><span class="token punctuation">(</span><span class="token string">&quot;Player is using the crafter.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Difference</p><div class="language-diff line-numbers-mode" data-highlighter="prismjs" data-ext="diff"><pre><code><span class="line"><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">    form.show(event.player);</span>
<span class="line"></span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">    // If event.player is used during script tick, declare</span>
<span class="line"></span><span class="token prefix inserted">+</span><span class="token line">    // it in a variable, otherwise you can&#39;t retrieve the</span>
<span class="line"></span><span class="token prefix inserted">+</span><span class="token line">    // player object, as event object turns into null</span>
<span class="line"></span><span class="token prefix inserted">+</span><span class="token line">    // after read-only state ends.</span>
<span class="line"></span><span class="token prefix inserted">+</span><span class="token line">    const player = event.player;</span>
<span class="line"></span></span></span>
<span class="line"><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">    // Use system.run to queue for later in the current</span>
<span class="line"></span><span class="token prefix inserted">+</span><span class="token line">    // tick to bypass read-only state</span>
<span class="line"></span><span class="token prefix inserted">+</span><span class="token line">    system.run(() =&gt; {</span>
<span class="line"></span><span class="token prefix inserted">+</span><span class="token line">      // Show the player a message form in script tick.</span>
<span class="line"></span><span class="token prefix inserted">+</span><span class="token line">      // As MessageFormData.show() is marked so it can&#39;t</span>
<span class="line"></span><span class="token prefix inserted">+</span><span class="token line">      // be called in read-only mode</span>
<span class="line"></span><span class="token prefix inserted">+</span><span class="token line">      form.show(player);</span>
<span class="line"></span><span class="token prefix inserted">+</span><span class="token line">    });</span>
<span class="line"></span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 23;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Highly recommend to check the API reference to see if the method or property can be called in read-only state. Each property or method that can&#39;t be called in read-only mode is mentioned in the description with the following text:</p><blockquote><ul><li>This function <strong>can&#39;t be called</strong> in read-only mode.</li><li>This property <strong>can&#39;t be edited</strong> in read-only mode.</li></ul></blockquote><h2 id="early-execution-mode" tabindex="-1"><a class="header-anchor" href="#early-execution-mode"><span>Early-execution mode</span></a></h2><p>This means the script is an environment before the world is loaded, which means most APIs like general world gamemode get property queries, are not ready to be accessed and worked with.</p><p>When the privilege error occurs, that means you attempted to run a function or edit a property that requires the world is loaded, before the world is loaded.</p><h3 id="resolving-early-execution-issue" tabindex="-1"><a class="header-anchor" href="#resolving-early-execution-issue"><span>Resolving early-execution issue</span></a></h3><p>If you have code using an API that is being run in the root context of a script file, it will need to be deferred to run either during or after the <code>world.afterEvents.worldLoad</code> event, or the traditional <code>system.run</code> timed callback.</p><p>You also need to move code that uses event the APIs below, if they were run in the root context of a script file previously, to root context instead of the <code>world.afterEvents.worldLoad</code> event, to avoid some events not being triggered, leading to script malfunction.</p><p>The following is an example of sending a message when script loads. Before v2.0.0 breaking changes, the script used to look like this:</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code><span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> world <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@minecraft/server&quot;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// This procedure is placed in root context of a script file.</span></span>
<span class="line"><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> player <span class="token keyword">of</span> world<span class="token punctuation">.</span><span class="token function">getAllPlayers</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  player<span class="token punctuation">.</span><span class="token function">sendMessage</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Hello </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>player<span class="token punctuation">.</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">!</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">world<span class="token punctuation">.</span>afterEvents<span class="token punctuation">.</span>playerSpawn<span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> player<span class="token punctuation">,</span> initialSpawn <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>initialSpawn<span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span></span>
<span class="line">  player<span class="token punctuation">.</span><span class="token function">sendMessage</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Hello </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>player<span class="token punctuation">.</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">!</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>To adapt to scripting v2.0.0 changes, the code above is changed into this:</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code><span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> world <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@minecraft/server&quot;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// Keep the event subscription function that was in root</span></span>
<span class="line"><span class="token comment">// context of a script file previously there.</span></span>
<span class="line">world<span class="token punctuation">.</span>afterEvents<span class="token punctuation">.</span>playerSpawn<span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> player<span class="token punctuation">,</span> initialSpawn <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>initialSpawn<span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span></span>
<span class="line">  player<span class="token punctuation">.</span><span class="token function">sendMessage</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Hello </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>player<span class="token punctuation">.</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">!</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">world<span class="token punctuation">.</span>afterEvents<span class="token punctuation">.</span>worldLoad<span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token comment">// This procedure is moved inside the worldLoad callback,</span></span>
<span class="line">  <span class="token comment">// since world.getAllPlayers() can&#39;t be called in</span></span>
<span class="line">  <span class="token comment">// early-execution mode.</span></span>
<span class="line">  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> player <span class="token keyword">of</span> world<span class="token punctuation">.</span><span class="token function">getAllPlayers</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    player<span class="token punctuation">.</span><span class="token function">sendMessage</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Hello </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>player<span class="token punctuation">.</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">!</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Difference</p><div class="language-diff line-numbers-mode" data-highlighter="prismjs" data-ext="diff"><pre><code><span class="line"><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line"> for (const player of world.getAllPlayers()) {</span>
<span class="line"></span><span class="token prefix deleted">-</span><span class="token line">   player.sendMessage(\`Hello \${player.name}!\`);</span>
<span class="line"></span><span class="token prefix deleted">-</span><span class="token line"> }</span>
<span class="line"></span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line"> world.afterEvents.worldLoad.subscribe(() =&gt; {</span>
<span class="line"></span><span class="token prefix inserted">+</span><span class="token line">   // This procedure is moved inside the worldLoad callback,</span>
<span class="line"></span><span class="token prefix inserted">+</span><span class="token line">   // since world.getAllPlayers() can&#39;t be called in</span>
<span class="line"></span><span class="token prefix inserted">+</span><span class="token line">   // early-execution mode.</span>
<span class="line"></span><span class="token prefix inserted">+</span><span class="token line">   for (const player of world.getAllPlayers()) {</span>
<span class="line"></span><span class="token prefix inserted">+</span><span class="token line">     player.sendMessage(\`Hello \${player.name}!\`);</span>
<span class="line"></span><span class="token prefix inserted">+</span><span class="token line">   }</span>
<span class="line"></span><span class="token prefix inserted">+</span><span class="token line"> });</span>
<span class="line"></span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 23;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="what-apis-are-available-in-early-execution" tabindex="-1"><a class="header-anchor" href="#what-apis-are-available-in-early-execution"><span>What APIs are available in early execution?</span></a></h4><p>The following are the initial APIs available in early execution mode for scripting v2.0.0-beta:</p><ul><li><code>world.beforeEvents.*.subscribe</code></li><li><code>world.beforeEvents.*.unsubscribe</code></li><li><code>world.afterEvents.*.subscribe</code></li><li><code>world.afterEvents.*.unsubscribe</code></li><li><code>system.afterEvents.*.subscribe</code></li><li><code>system.afterEvents.*.unsubscribe</code></li><li><code>system.beforeEvents.*.subscribe</code></li><li><code>system.beforeEvents.*.unsubscribe</code></li><li><code>system.clearJob</code></li><li><code>system.clearRun</code></li><li><code>system.run</code></li><li><code>system.runInterval</code></li><li><code>system.runJob</code></li><li><code>system.runTimeout</code></li><li><code>system.waitTicks</code></li><li><code>BlockComponentRegistry.registerCustomComponent</code></li><li><code>ItemComponentRegistry.registerCustomComponent</code></li></ul><p>Again, please check the API reference to see if the method or property can be called in early-execution state. Each property or method that can be called in early-execution mode is mentioned in the description with one of the following text:</p><blockquote><ul><li>This property <strong>can be read</strong> in early-execution mode.</li><li>This function <strong>can be called</strong> in early-execution mode.</li></ul></blockquote>`,35)]))}const c=s(p,[["render",i]]),r=JSON.parse('{"path":"/features/script-privileges.html","title":"Script Privileges","lang":"en-US","frontmatter":{"title":"Script Privileges","description":"A guide on Scripting API privileges (read-only mode and early-execution mode)"},"git":{"updatedTime":1748604455000,"contributors":[{"name":"JaylyDev","username":"JaylyDev","email":"65847850+JaylyDev@users.noreply.github.com","commits":1,"url":"https://github.com/JaylyDev"}],"changelog":[{"hash":"59bf41856c8921dfc07bcfa18a56be456365ae73","time":1748604455000,"email":"65847850+JaylyDev@users.noreply.github.com","author":"Jayly","message":"Squashed commit of the following:"}]},"filePathRelative":"features/script-privileges.md"}');export{c as comp,r as data};
