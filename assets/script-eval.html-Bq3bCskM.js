import{_ as a,c as n,a as s,o as t}from"./app-CJ4QlfhI.js";const i={};function l(o,e){return t(),n("div",null,e[0]||(e[0]=[s(`<h1 id="script-eval" tabindex="-1"><a class="header-anchor" href="#script-eval"><span>Script Eval</span></a></h1><p>A capability registry to enable the use of eval() and Function() from string in Minecraft scripting.</p><p>Enable it in <code>manifest.json</code> if neccessary.</p><p>manifest.json</p><div class="language-json line-numbers-mode" data-highlighter="prismjs" data-ext="json" data-title="json"><pre><code><span class="line"><span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">&quot;capabilities&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;script_eval&quot;</span><span class="token punctuation">]</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="usage" tabindex="-1"><a class="header-anchor" href="#usage"><span>Usage</span></a></h2><p>You can execute JavaScript code through the <code>Function</code> object or <code>eval</code> function.</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">new</span> <span class="token class-name">Function</span><span class="token punctuation">(</span><span class="token string">&#39;console.log(&quot;Hello World&quot;)&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token function">eval</span><span class="token punctuation">(</span><span class="token string">&#39;console.log(&quot;Hello World&quot;)&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Check out the following links for more infomation:</p><ul><li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function" target="_blank" rel="noopener noreferrer">Detailed usage of <code>Function</code> object</a></li><li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/eval" target="_blank" rel="noopener noreferrer">Detailed usage of <code>eval</code> function</a></li></ul><h2 id="errors" tabindex="-1"><a class="header-anchor" href="#errors"><span>Errors</span></a></h2><p>Following errors are thrown if script_eval is not enabled:</p><ul><li>&#39;eval is not supported&#39; or &#39;&#39;eval&#39; is not defined&#39;</li><li>Function from string is not supported</li></ul>`,14)]))}const c=a(i,[["render",l],["__file","script-eval.html.vue"]]),p=JSON.parse('{"path":"/features/script-eval.html","title":"Script Eval","lang":"en-US","frontmatter":{"title":"Script Eval","description":"A capability registry to enable the use of eval() and Function() from string in Minecraft scripting."},"headers":[{"level":2,"title":"Usage","slug":"usage","link":"#usage","children":[]},{"level":2,"title":"Errors","slug":"errors","link":"#errors","children":[]}],"git":{"updatedTime":1736081062000,"contributors":[{"name":"Jayly","email":"65847850+JaylyDev@users.noreply.github.com","commits":1,"url":"https://github.com/Jayly"}]},"filePathRelative":"features/script-eval.md"}');export{c as comp,p as data};
